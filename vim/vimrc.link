set nocompatible
filetype off

set backspace=2
set backspace=indent,eol,start

set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

Plugin 'gmarik/Vundle.vim'
Plugin 'vim-scripts/a.vim'
Plugin 'bling/vim-airline'
Plugin 'vim-scripts/Auto-Pairs'
Plugin 'davidhalter/jedi-vim'
Plugin 'Valloric/YouCompleteMe'
Plugin 'scrooloose/nerdtree'
Plugin 'scrooloose/syntastic'
Plugin 'majutsushi/tagbar'
Plugin 'altercation/vim-colors-solarized'
Plugin 'rking/ag.vim'
Plugin 'kien/ctrlp.vim'
Plugin 'mhinz/vim-startify'
Plugin 'tpope/vim-fugitive'
Plugin 'mhinz/vim-signify'
Plugin 'scrooloose/nerdcommenter'
Plugin 'tpope/vim-surround'

call vundle#end()
filetype plugin indent on

syntax on

if has("gui_running")
    " No toolbar
    set guioptions-=T

    set guicursor=n-v-c:block-Cursor
endif

" Misc
set showcmd
set number
set nowrap
set smartindent
set ic
set hls
set autoindent
set cindent

" Tabs to spaces
set tabstop=4
set expandtab
set shiftwidth=4

" Turn off backups
set nobackup
set noswapfile

" Encodings
set encoding=utf8
set fileencodings=utf8,cp1251
set termencoding=utf-8
set langmenu=en_US.UTF-8

" Turn on status line
set laststatus=2

autocmd FileType python setlocal completeopt-=preview
autocmd FileType cpp setlocal completeopt-=preview

" Python
autocmd FileType python nnoremap <F5> :!python %<CR>

" Jedi
let g:jedi#show_call_signatures = 1
let g:jedi#popup_select_first = 0
let g:jedi#use_tabs_not_buffers = 0
"let g:jedi#use_splits_not_buffers = "winwidth"

" Syntastic
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0
let g:syntastic_python_checkers = ["pyflakes"]

" YouCompleteMe
let g:ycm_filetype_blacklist = {
    \ "tagbar": 1,
    \ "markdown": 1
    \}
let g:ycm_filetype_specific_completion_to_disable = {
    \ "gitcommit": 1
    \}
let g:ycm_show_diagnostics_ui = 0
let g:ycm_min_num_of_chars_for_completion = 3
let g:ycm_collect_identifiers_from_tags_files = 1
nnoremap <Leader>c :YcmCompleter GoTo<CR>

" NERDTree
nnoremap <F3> :NERDTreeToggle<CR>
let NERDTreeIgnore=['\~$', '\.pyc$', '\.pyo$', '\.class$', '\.o$']

" TagBar
nnoremap <F2> :TagbarToggle<CR>

" Ack-grep and ag.vim
if executable('ack-grep')
    let g:ag_prg = 'ack-grep -H --nocolor --nogroup --column'
endif

noremap <Leader>a :Ag! <cword><cr>
let g:ag_working_path_mode="r"

" Ctrl-P
let g:ctrlp_cache_dir = $HOME . '/.cache/ctrlp'
let g:ctrlp_use_caching = 0
let g:ctrlp_working_path_mode = 'ra'
let g:ctrlp_match_window = 'results:20'

" ctags
set tags=.tags;$HOME

" Super YT delimiter
map <Leader>d :append<CR>////////////////////////////////////////////////////////////////////////////////<CR><CR>.<CR>

" Delete trailing whitespaces
nnoremap <leader>dtr :%s/\s\+$//e<CR>

" Thrift
au BufRead,BufNewFile *.thrift set filetype=thrift
au! Syntax thrift source ~/.vim/thrift.vim
